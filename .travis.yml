sudo: required
dist: trusty
group: deprecated-2017Q3
os: linux
language: generic
addons:
  ssh_known_hosts:47.92.67.151
cache:
  apt: true
  ccache: true
  directories:
  - depends/built
  - depends/sdk-sources
  - "$HOME/.ccache"
env:
  global:
  - MAKEJOBS=-j5
  - RUN_TESTS=false
  - CHECK_DOC=0
  - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
  - CCACHE_SIZE=400M
  - CCACHE_TEMPDIR=/tmp/.ccache-temp
  - CCACHE_COMPRESS=1
  - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
  - SDK_URL=https://bitcoincore.org/depends-sources/sdks
  - PYTHON_DEBUG=1
  - WINEDEBUG=fixme-all
  - DOCKER_BUILD=false
  matrix:
  - HOST=arm-linux-gnueabihf PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-arm-linux-gnueabihf"
    DEP_OPTS="NO_QT=0" CHECK_DOC=1 GOAL="install" MASSGRID_CONFIG="--enable-glibc-back-compat
    --enable-reduce-exports"
  - HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=0" PPA="ppa:bitcoin/bitcoin"
    PACKAGES="python3 nsis g++-mingw-w64-i686 wine1.7 bc" RUN_TESTS=false GOAL="install"
    MASSGRID_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4"
  - HOST=i686-pc-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-multilib bc python3-zmq"
    DEP_OPTS="NO_QT=0" RUN_TESTS=false GOAL="install" MASSGRID_CONFIG="--enable-zmq
    --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++"
    USE_SHELL="/bin/dash" PYZMQ=true
  - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=0" PPA="ppa:bitcoin/bitcoin"
    PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine1.7 bc" RUN_TESTS=false GOAL="install"
    MASSGRID_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4"
  - HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="bc python3-zmq"
    DEP_OPTS="NO_QT=0 NO_UPNP=1 DEBUG=1" RUN_TESTS=false GOAL="install" MASSGRID_CONFIG="--enable-zmq
    --enable-glibc-back-compat --enable-reduce-exports" CPPFLAGS="-DDEBUG_LOCKORDER
    -DENABLE_MGD_DEBUG" PYZMQ=true
before_install:
- openssl aes-256-cbc -K $encrypted_336ef0ac5313_key -iv $encrypted_336ef0ac5313_iv
  -in id_rsa.enc -out ~/.ssh/id_rsa -d
- chmod 600 ~/.ssh/id_rsa
- git clone https://github.com/dashpay/dash_hash
- travis_retry sudo apt-get install python3-pip python3-dev
- travis_retry sudo add-apt-repository ppa:ubuntu-wine/ppa -y
- export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" |
  sed "s|::|:|g")
install:
- if [ "$PYZMQ" = "true" ]; then pip3 install pyzmq --user ; fi
- if [ -n "$PPA" ]; then travis_retry sudo add-apt-repository "$PPA" -y; fi
- if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ;
  fi
- if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
- if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends
  --no-upgrade -qq $PACKAGES; fi
- cd dash_hash && python3 setup.py install --user && cd ..
before_script:
- unset CC; unset CXX
- unset DISPLAY
- python3 -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL);
  fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
- mkdir -p depends/SDKs depends/sdk-sources
- if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then
  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz;
  fi
- if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then
  tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
- make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
script:
- export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
- if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
- OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
- MASSGRID_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST
  --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
- depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
- test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
- mkdir build && cd build
- "../configure --cache-file=config.cache $MASSGRID_CONFIG_ALL $MASSGRID_CONFIG CFLAGS=-std=c99
  || ( cat config.log && false)"
- make distdir VERSION=$HOST
- cd massgrid-$HOST
- "./configure --cache-file=../config.cache $MASSGRID_CONFIG_ALL $MASSGRID_CONFIG
  CFLAGS=-std=c99 || ( cat config.log && false)"
- make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL
  V=1 ; false )
- export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
- if [ "$RUN_TESTS" = "true" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1;
  fi
- if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.py --coverage; fi
- cd ../..
- if [ "$DOCKER_BUILD" = "true" ]; then BUILD_DIR=build/massgrid-$HOST ./docker/build-docker.sh;
  fi
after_script:
- echo $TRAVIS_COMMIT_RANGE
- echo $TRAVIS_COMMIT_LOG
after_success:
- if [ "$TRAVIS_PULL_REQUEST" = "false" -a "$TRAVIS_BRANCH" = "masternode" -a "$DOCKER_BUILD"
  = "true" ]; then docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD && ./docker/push-docker.sh;
  fi
- scp -o stricthostkeychecking=no build/massgrid-$HOST/src/massgridd* mlgb@47.92.67.151:MassGridRelease/massgrid-$HOST/
